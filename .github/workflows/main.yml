name: CI-CD-Pipelina-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "spring-securuti-mvs"
  EB_APPLICATION_NAME       : "spring-security-mvs"
  EB_ENVIRONMENT_NAME       : "Springsecuritymvs-env"
  DEPLOY_PACKAGE_NAME       : "mvs_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-central-1"

on:
  push:
    branches: 
      - master

#   workflow_dispatch:

jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
     - name: Git clone our repo
       uses: actions/checkout@v1
     - name: Setup up JDK 1.17
       uses: actions/setup-java@v2
       with: 
          java-version: 1.17
       
     - name: Create ZIP deployment package
#        run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
       run: mvn -B package --file pom.xml
       
       
     - name: Configure my AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
         aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }} 
         aws-region            : ${{ env.AWS_REGION_NAME }}
         
     - name: Copy Deployment package to S3 bucket
       run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
       
     - name: Priny Happy Message for CI finish
       run : echo "CI Pileline part finished successfully!"
       
     
  my_cd_part:
    runs-on : ubuntu-latest
    needs   : [my_ci_part]
    
    steps: 
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
         aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }} 
         aws-region            : ${{ env.AWS_REGION_NAME }}
       
    - name: Create new ElasticBeanstalk application version
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CommitSHA-${{ github.sha }}"
        
    - name: Deploy new ElasticBeanstalk application version 
      run  : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
       
    - name: Print happy message for CD finish
      run : echo "CD Pipeline part finished successully!"
